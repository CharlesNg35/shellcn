package permissions

func init() {
	perms := []*Permission{
		{
			ID:           "user.view",
			Module:       "core",
			Category:     "users",
			DisplayName:  "View Users",
			Description:  "View users",
			DefaultScope: "global",
		},
		{
			ID:           "user.view_all",
			Module:       "core",
			DependsOn:    []string{"user.view"},
			Category:     "users",
			DisplayName:  "View All Users",
			Description:  "View all users regardless of ownership or scope",
			DefaultScope: "global",
		},
		{
			ID:           "user.create",
			Module:       "core",
			DependsOn:    []string{"user.view"},
			Category:     "users",
			DisplayName:  "Create Users",
			Description:  "Create new users",
			DefaultScope: "global",
		},
		{
			ID:           "user.edit",
			Module:       "core",
			DependsOn:    []string{"user.view"},
			Implies:      []string{"user.update", "user.activate", "user.deactivate", "user.password.reset"},
			Category:     "users",
			DisplayName:  "Edit Users",
			Description:  "Edit existing users",
			DefaultScope: "global",
		},
		{
			ID:           "user.update",
			Module:       "core",
			DependsOn:    []string{"user.view"},
			Category:     "users",
			DisplayName:  "Update Users",
			Description:  "Update user profile details",
			DefaultScope: "global",
		},
		{
			ID:           "user.activate",
			Module:       "core",
			DependsOn:    []string{"user.view"},
			Category:     "users",
			DisplayName:  "Activate Users",
			Description:  "Activate suspended or pending users",
			DefaultScope: "global",
		},
		{
			ID:           "user.deactivate",
			Module:       "core",
			DependsOn:    []string{"user.view"},
			Category:     "users",
			DisplayName:  "Deactivate Users",
			Description:  "Deactivate existing users",
			DefaultScope: "global",
		},
		{
			ID:           "user.password.reset",
			Module:       "core",
			DependsOn:    []string{"user.view"},
			Category:     "users",
			DisplayName:  "Reset User Passwords",
			Description:  "Reset passwords for users",
			DefaultScope: "global",
		},
		{
			ID:           "user.delete",
			Module:       "core",
			DependsOn:    []string{"user.view", "user.update"},
			Category:     "users",
			DisplayName:  "Delete Users",
			Description:  "Delete users",
			DefaultScope: "global",
		},
		{
			ID:           "user.manage",
			Module:       "core",
			DependsOn:    []string{"user.view_all", "user.create", "user.update", "user.delete", "user.activate", "user.deactivate", "user.invite", "user.password.reset"},
			Implies:      []string{"user.view_all", "user.create", "user.update", "user.delete", "user.activate", "user.deactivate", "user.invite", "user.password.reset", "user.edit"},
			Category:     "users",
			DisplayName:  "Manage Users",
			Description:  "Administer all user accounts",
			DefaultScope: "global",
		},
		{
			ID:           "user.invite",
			Module:       "core",
			DependsOn:    []string{"user.view"},
			Category:     "users",
			DisplayName:  "Invite Users",
			Description:  "Invite users via email",
			DefaultScope: "global",
		},
		{
			ID:           "team.view",
			Module:       "core",
			Category:     "teams",
			DisplayName:  "View Teams",
			Description:  "View teams",
			DefaultScope: "global",
		},
		{
			ID:           "team.view_all",
			Module:       "core",
			DependsOn:    []string{"team.view"},
			Category:     "teams",
			DisplayName:  "View All Teams",
			Description:  "View all teams regardless of membership",
			DefaultScope: "global",
		},
		{
			ID:           "team.create",
			Module:       "core",
			DependsOn:    []string{"team.view"},
			Category:     "teams",
			DisplayName:  "Create Teams",
			Description:  "Create new teams",
			DefaultScope: "global",
		},
		{
			ID:           "team.update",
			Module:       "core",
			DependsOn:    []string{"team.view"},
			Category:     "teams",
			DisplayName:  "Update Teams",
			Description:  "Update existing teams",
			DefaultScope: "global",
		},
		{
			ID:           "team.delete",
			Module:       "core",
			DependsOn:    []string{"team.view"},
			Category:     "teams",
			DisplayName:  "Delete Teams",
			Description:  "Delete teams",
			DefaultScope: "global",
		},
		{
			ID:           "team.member.add",
			Module:       "core",
			DependsOn:    []string{"team.view"},
			Category:     "teams",
			DisplayName:  "Add Team Members",
			Description:  "Add members to teams",
			DefaultScope: "global",
		},
		{
			ID:           "team.member.remove",
			Module:       "core",
			DependsOn:    []string{"team.view"},
			Category:     "teams",
			DisplayName:  "Remove Team Members",
			Description:  "Remove members from teams",
			DefaultScope: "global",
		},
		{
			ID:           "team.member.manage",
			Module:       "core",
			DependsOn:    []string{"team.member.add", "team.member.remove"},
			Implies:      []string{"team.member.add", "team.member.remove"},
			Category:     "teams",
			DisplayName:  "Manage Team Memberships",
			Description:  "Manage team membership assignments",
			DefaultScope: "global",
		},
		{
			ID:           "team.manage",
			Module:       "core",
			DependsOn:    []string{"team.view_all", "team.create", "team.update", "team.delete", "team.member.manage"},
			Implies:      []string{"team.view_all", "team.create", "team.update", "team.delete", "team.member.manage", "team.member.add", "team.member.remove"},
			Category:     "teams",
			DisplayName:  "Manage Teams",
			Description:  "Administer teams and their memberships",
			DefaultScope: "global",
		},
		{
			ID:           "connection.view",
			Module:       "core",
			Category:     "connections",
			DisplayName:  "View Connections",
			Description:  "View connection protocols and resources",
			DefaultScope: "global",
		},
		{
			ID:           "connection.view_all",
			Module:       "core",
			DependsOn:    []string{"connection.view"},
			Category:     "connections",
			DisplayName:  "View All Connections",
			Description:  "View all connections regardless of ownership or sharing",
			DefaultScope: "global",
		},
		{
			ID:           "connection.create",
			Module:       "core",
			DependsOn:    []string{"connection.view"},
			Category:     "connections",
			DisplayName:  "Create Connections",
			Description:  "Create new connections",
			DefaultScope: "global",
		},
		{
			ID:           "connection.update",
			Module:       "core",
			DependsOn:    []string{"connection.view"},
			Category:     "connections",
			DisplayName:  "Update Connections",
			Description:  "Modify existing connections",
			DefaultScope: "global",
		},
		{
			ID:           "connection.delete",
			Module:       "core",
			DependsOn:    []string{"connection.view"},
			Category:     "connections",
			DisplayName:  "Delete Connections",
			Description:  "Delete connections",
			DefaultScope: "global",
		},
		{
			ID:           "connection.launch",
			Module:       "core",
			DependsOn:    []string{"connection.view"},
			Category:     "connections",
			DisplayName:  "Launch Connections",
			Description:  "Launch connections",
			DefaultScope: "resource",
		},
		{
			ID:           "connection.manage",
			Module:       "core",
			DependsOn:    []string{"connection.view_all", "connection.create", "connection.update", "connection.delete"},
			Implies:      []string{"connection.view_all", "connection.create", "connection.update", "connection.delete", "connection.share"},
			Category:     "connections",
			DisplayName:  "Manage Connections",
			Description:  "Administer connections and their lifecycle",
			DefaultScope: "global",
		},
		{
			ID:           "connection.share",
			Module:       "core",
			DependsOn:    []string{"connection.update"},
			Category:     "connections",
			DisplayName:  "Share Connections",
			Description:  "Manage connection sharing and visibility",
			DefaultScope: "global",
		},
		{
			ID:           "connection.folder.view",
			Module:       "core",
			Category:     "connections",
			DisplayName:  "View Connection Folders",
			Description:  "View connection folders",
			DefaultScope: "global",
		},
		{
			ID:           "connection.folder.create",
			Module:       "core",
			DependsOn:    []string{"connection.folder.view"},
			Category:     "connections",
			DisplayName:  "Create Connection Folders",
			Description:  "Create new connection folders",
			DefaultScope: "global",
		},
		{
			ID:           "connection.folder.update",
			Module:       "core",
			DependsOn:    []string{"connection.folder.view"},
			Category:     "connections",
			DisplayName:  "Update Connection Folders",
			Description:  "Update existing connection folders",
			DefaultScope: "global",
		},
		{
			ID:           "connection.folder.delete",
			Module:       "core",
			DependsOn:    []string{"connection.folder.view"},
			Category:     "connections",
			DisplayName:  "Delete Connection Folders",
			Description:  "Delete connection folders",
			DefaultScope: "global",
		},
		{
			ID:           "connection.folder.manage",
			Module:       "core",
			DependsOn:    []string{"connection.folder.view", "connection.folder.create", "connection.folder.update", "connection.folder.delete"},
			Implies:      []string{"connection.folder.view", "connection.folder.create", "connection.folder.update", "connection.folder.delete"},
			Category:     "connections",
			DisplayName:  "Manage Connection Folders",
			Description:  "Manage connection folders",
			DefaultScope: "global",
		},
		{
			ID:           "vault.view",
			Module:       "core",
			Category:     "vault",
			DisplayName:  "View Vault Entries",
			Description:  "View credential vault entries",
			DefaultScope: "global",
		},
		{
			ID:           "vault.create",
			Module:       "core",
			DependsOn:    []string{"vault.view"},
			Category:     "vault",
			DisplayName:  "Create Vault Entries",
			Description:  "Create credential vault entries",
			DefaultScope: "global",
		},
		{
			ID:           "vault.edit",
			Module:       "core",
			DependsOn:    []string{"vault.view"},
			Category:     "vault",
			DisplayName:  "Edit Vault Entries",
			Description:  "Edit credential vault entries",
			DefaultScope: "global",
		},
		{
			ID:           "vault.delete",
			Module:       "core",
			DependsOn:    []string{"vault.view"},
			Category:     "vault",
			DisplayName:  "Delete Vault Entries",
			Description:  "Delete credential vault entries",
			DefaultScope: "global",
		},
		{
			ID:           "vault.share",
			Module:       "core",
			DependsOn:    []string{"vault.view", "vault.edit"},
			Category:     "vault",
			DisplayName:  "Share Vault Entries",
			Description:  "Share credential vault entries",
			DefaultScope: "global",
		},
		{
			ID:           "vault.use_shared",
			Module:       "core",
			DependsOn:    []string{"vault.view"},
			Category:     "vault",
			DisplayName:  "Use Shared Vault Entries",
			Description:  "Use shared credential vault entries",
			DefaultScope: "resource",
		},
		{
			ID:           "vault.manage_all",
			Module:       "core",
			DependsOn:    []string{"vault.view", "vault.edit", "vault.delete", "vault.create", "vault.share"},
			Implies:      []string{"vault.view", "vault.create", "vault.edit", "vault.delete", "vault.share", "vault.use_shared"},
			Category:     "vault",
			DisplayName:  "Manage All Vault Entries",
			Description:  "Manage all credential vault entries",
			DefaultScope: "global",
		},
		{
			ID:           "permission.view",
			Module:       "core",
			Category:     "administration",
			DisplayName:  "View Permissions",
			Description:  "View permissions",
			DefaultScope: "global",
		},
		{
			ID:           "permission.manage",
			Module:       "core",
			DependsOn:    []string{"permission.view"},
			Category:     "administration",
			DisplayName:  "Manage Permissions",
			Description:  "Assign and revoke permissions",
			DefaultScope: "global",
		},
		{
			ID:           "audit.view",
			Module:       "core",
			Category:     "auditing",
			DisplayName:  "View Audit Logs",
			Description:  "View audit logs",
			DefaultScope: "global",
		},
		{
			ID:           "audit.export",
			Module:       "core",
			DependsOn:    []string{"audit.view"},
			Category:     "auditing",
			DisplayName:  "Export Audit Logs",
			Description:  "Export audit logs",
			DefaultScope: "global",
		},
		{
			ID:           "security.audit",
			Module:       "core",
			DependsOn:    []string{"audit.view"},
			Category:     "auditing",
			DisplayName:  "Run Security Audits",
			Description:  "Run security audits",
			DefaultScope: "global",
		},
		{
			ID:           "notification.view",
			Module:       "core",
			Category:     "notifications",
			DisplayName:  "View Notifications",
			Description:  "View in-app notifications",
			DefaultScope: "global",
		},
		{
			ID:           "notification.manage",
			Module:       "core",
			DependsOn:    []string{"notification.view"},
			Category:     "notifications",
			DisplayName:  "Manage Notifications",
			Description:  "Manage in-app notifications and broadcasts",
			DefaultScope: "global",
		},
	}

	for _, perm := range perms {
		if err := Register(perm); err != nil {
			panic(err)
		}
	}
}
